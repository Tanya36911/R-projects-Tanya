#| label: setup
library(tidyverse)
library(ggformula)
library(babynames)
babynames
babynames %>% filter(name=="Tanya")
babynames %>% filter(name=="Tanya") %>%
gf_line(n~year)
babynames %>% filter(name=="Sneha")
babynames %>% filter(name=="Sean"|name=="shawn"|name=="Shuan")
babynames %>% filter(name=="Sean"|name=="Shawn"|name=="Shuan")
babynames %>% filter(name=="Sean"|name=="Shawn"|name=="Shaan")
babynames %>% filter(name=="Sean"|name=="Shawn")
babynames %>% filter(name=="Sean"|sex=="F")
babynames %>% filter(name=="Sean" & sex=="F")
install.package("skimr")
install.packages("skimr")
install.packages("mosiac")
install.packages("mosaic")
install.packages("kableExtra")
#| label: setup
library(tidyverse)
library(mosaic)
library(skimr)
library(knitr)
library(kableExtra)
mpg
#| label: setup
library(tidyverse)
library(mosaic)
library(skimr)
library(knitr)
library(kableExtra)
mpg %>%
head(10)
mpg %>% skimr::skim()
glimpse(mpg)
inspect(mpg)
mpg_modified <- mpg %>%
dplyr::mutate(
cyl = as_factor(cyl),
fl = as_factor(fl),
drv = as_factor(drv),
class = as_factor(class),
trans = as_factor(trans)
)
glimpse(mpg_modified)
#| label: setup
library(tidyverse)
library(mosaic)
library(skimr)
library(knitr)
library(kableExtra)
library(babynames)
glimpse(babynames)
babynames_modified <- babynames %>%
dplyer::mutate(
sex= as.factor(sex)
)
babynames_modified <- babynames %>%
dplyr::mutate(
sex= as.factor(sex)
)
glimpse(babynames_modified)
babynames_modified <- babynames %>%
dplyr::mutate(
sex= as.factor(sex)
)
glimpse(babynames_modified)
#| label: setup
library(tidyverse)
library(mosaic)
library(ggformula)
library(skimr)
taxi <- read_csv("https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/taxi.csv")
glimpse(taxi)
taxi <- read_csv("https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/taxi.csv")
taxi
skim(taxi)
inspect(taxi)
taxi_modified <- taxi %>%
mutate(
dow=factor(dow,
levels=c("Mon","Tue","Wed","Thu","Fri","Sat","Sun"),
labels=c("Mon","Tue","Wed","Thu","Fri","Sat","Sun"),
ordered= TRUE
),
local = factor(local,
levels = c("no", "yes"),
labels = c("no", "yes"),
ordered = TRUE
),
month = factor(month,
levels = c("Jan", "Feb", "Mar", "Apr"),
labels = c("Jan", "Feb", "Mar", "Apr"),
ordered = TRUE
),
tip = factor(tip,
levels=c("no", "yes"),
labels=c("no", "yes"),
ordered=TRUE
),
hour=as.factor(hour),
company=as.factor(company)
)
taxi_modified %>% glimpse()
## Set graph theme
theme_set(new = theme_custom())
## Set graph theme
##theme_set(new = theme_custom())
##
gf_bar(~tip, data = taxi_modified) %>%
gf_labs(title = "Plot 1A: Counts of Tips")
taxi_modified %>%
gf_bar(~local,
fill = ~tip,
position = "dodge"
) %>%
gf_labs(title = "Plot 2A: Dodged Bar Chart")
## Set graph theme
##theme_set(new = theme_custom())
##
gf_bar(~tip, data = taxi_modified) %>%
gf_bar(~tip,colour= ~local)
gf_labs(title = "Plot 1A: Counts of Tips")
## Set graph theme
##theme_set(new = theme_custom())
##
gf_bar(~tip, data = taxi_modified) %>%
gf_bar(~tip,fill =  ~local)
gf_labs(title = "Plot 1A: Counts of Tips")
## Set graph theme
##theme_set(new = theme_custom())
##
gf_bar(~tip, data = taxi_modified) %>%
gf_bar(~tip,fill =  ~local)
gf_labs(title = "Plot 1A: Counts of Tips")
## Set graph theme
##theme_set(new = theme_custom())
##
gf_bar(~tip, data = taxi_modified) %>%
gf_bar(~tip,fill =  ~local)
gf_labs(title = "Plot 1A: Counts of Tips")
## Set graph theme
##theme_set(new = theme_custom())
##
gf_bar(~tip, data = taxi_modified) %>%
gf_bar(~tip,fill =  ~local)
gf_labs(title = "Plot 1A: Counts of Tips") %>%
gf_refine(scale_fill_manual(values = c("cyan", "green")))
## Set graph theme
##theme_set(new = theme_custom())
##
gf_bar(~tip, data = taxi_modified) %>%
gf_bar(~tip,fill =  ~local) %>%
gf_refine(scale_fill_manual(values = c("cyan", "green")))
gf_labs(title = "Plot 1A: Counts of Tips")
## Set graph theme
##theme_set(new = theme_custom())
##
gf_bar(~tip, data = taxi_modified) %>%
gf_bar(~tip,fill =  ~local) %>%
gf_refine(scale_fill_manual(values = c("orange", "navy")))
gf_labs(title = "Plot 1A: Counts of Tips")
## Set graph theme
##theme_set(new = theme_custom())
##
gf_bar(~tip, data = taxi_modified) %>%
gf_bar(~tip,fill =  ~local) %>%
gf_refine(scale_fill_manual(values = c("orange", "red")))
gf_labs(title = "Plot 1A: Counts of Tips")
## Set graph theme
##theme_set(new = theme_custom())
##
gf_bar(~tip, data = taxi_modified) %>%
gf_bar(~tip,fill =  ~local) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
gf_labs(title = "Plot 1A: Counts of Tips")
taxi_modified %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
taxi_modified %>%
gf_bar(~local,
fill = ~tip,
position = "dodge"
) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_labs(title = "Plot 2A: Dodged Bar Chart")
taxi_modified %>%
gf_bar(~local,
fill = ~tip,
position = "stack"
) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_labs(title = "Plot 2A: Dodged Bar Chart")
taxi_modified %>%
gf_bar(~local,
fill = ~tip,
position = "fill"
) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_labs(title = "Plot 2A: Dodged Bar Chart")
## Showing "per capita" percentages
## Better labelling of Y-axis
taxi_modified %>%
gf_props(~company, fill = ~tip, position = "fill") %>%
gf_labs(
title = "Plot 2D: Filled Bar Chart",
subtitle = "Shows Per group differences in Proportions!"
) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
## Showing "per capita" percentages
## Better labelling of Y-axis
taxi_modified %>%
gf_props(~company, fill = ~tip, position = "fill") %>%
gf_labs(
title = "Plot 2D: Filled Bar Chart",
subtitle = "Shows Per group differences in Proportions!"
) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
## Showing "per capita" percentages
## Better labelling of Y-axis
taxi_modified %>%
gf_bar(~company, fill = ~tip, position = "fill") %>%
gf_labs(
title = "Plot 2D: Filled Bar Chart",
subtitle = "Shows Per group differences in Proportions!"
) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
## Showing "per capita" percentages
## Better labelling of Y-axis
taxi_modified %>%
gf_bar(~company, fill = ~tip, position = "fill") %>%
gf_labs(
title = "Plot 2D: Filled Bar Chart",
subtitle = "Shows Per group differences in Proportions!"
) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
##gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
## Showing "per capita" percentages
## Better labelling of Y-axis
taxi_modified %>%
gf_bar(~company, fill = ~tip, position = "fill") %>%
gf_labs(
title = "Plot 2D: Filled Bar Chart",
subtitle = "Shows Per group differences in Proportions!"
) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
##%>%
##gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
## Showing "per capita" percentages
## Better labelling of Y-axis
taxi_modified %>%
gf_bar(~company, fill = ~tip, position = "fill") %>%
gf_labs(
title = "Plot 2D: Filled Bar Chart",
subtitle = "Shows Per group differences in Proportions!"
) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
gf_bar(~hour, fill = ~tip, data = taxi_modified) %>%
gf_labs(title = "Plot B: Counts of Tips by Hour")
gf_bar(~hour, fill = ~tip, data = taxi_modified) %>%
gf_labs(title = "Plot B: Counts of Tips by Hour") %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
##
gf_bar(~dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(title = "Plot C: Counts of Tips by Day of Week")
##
gf_bar(~dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(title = "Plot C: Counts of Tips by Day of Week") %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
##
gf_bar(~month, fill = ~tip, data = taxi_modified) %>%
gf_labs(title = "Plot D: Counts of Tips by Month") %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
gf_bar(~month, fill = ~tip, data = taxi_modified, position= "fill") %>%
gf_labs(title = "Plot D: Counts of Tips by Month") %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
##
gf_bar(~ month | dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(title = "Plot E: Counts of Tips by Day of Week and Month") %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
##
## This may be too busy a graph...
gf_bar(~ dow | hour, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot F: Counts of Tips by Hour and Day of Week",
subtitle = "Is this plot arrangement easy to grasp?"
) %>%  gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
##
## This may be too busy a graph...
gf_bar(~ dow | hour, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot F: Counts of Tips by Hour and Day of Week",
subtitle = "Is this plot arrangement easy to grasp?"
) %>%  gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
##
## This may be too busy a graph...
gf_bar(~ dow | hour, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot F: Counts of Tips by Hour and Day of Week",
subtitle = "Is this plot arrangement easy to grasp?"
) %>%  gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1))) %>%
gf_theme(theme(axis.text.y = element_text(size = 6, angle = 45, hjust = 1)))
##
## This may be too busy a graph...
gf_bar(~ dow | hour, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot F: Counts of Tips by Hour and Day of Week",
subtitle = "Is this plot arrangement easy to grasp?"
) %>%  gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1))) %>%
gf_theme(theme(axis.text.y = element_text(size = 6, hjust = 1)))
##
## This may be too busy a graph...
gf_bar(~ dow | hour, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot F: Counts of Tips by Hour and Day of Week",
subtitle = "Is this plot arrangement easy to grasp?"
) %>%  gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1))) %>%
gf_theme(theme(axis.text.y = element_text(size = 10, hjust = 1)))
##
## This may be too busy a graph...
gf_bar(~ dow | hour, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot F: Counts of Tips by Hour and Day of Week",
subtitle = "Is this plot arrangement easy to grasp?"
) %>%  gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1))) %>%
gf_theme(theme(axis.text.y = element_text(size = 4, hjust = 1)))
## This is better!
gf_bar(~ hour | dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot G: Counts of Tips by Hour and Day of Week",
subtitle = "Swapped the Facets"
) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue"))
## This is better!
gf_bar(~ hour | dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot G: Counts of Tips by Hour and Day of Week",
subtitle = "Swapped the Facets"
) %>% gf_refine(scale_fill_manual(values = c("orange", "powderblue"))
## This is better!
gf_bar(~ hour | dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot G: Counts of Tips by Hour and Day of Week",
subtitle = "Swapped the Facets"
)
## This is better!
gf_bar(~ hour | dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot G: Counts of Tips by Hour and Day of Week",
subtitle = "Swapped the Facets"
) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
## This is better!
gf_bar(~ hour | dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot G: Counts of Tips by Hour and Day of Week",
subtitle = "Swapped the Facets"
) %>%
gf_theme(theme(axis.text.x = element_text(size = 5, angle = 45, hjust = 1)))
## This is better!
gf_bar(~ hour | dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot G: Counts of Tips by Hour and Day of Week",
subtitle = "Swapped the Facets"
) %>%
gf_theme(theme(axis.text.x = element_text(size = 5, hjust = 1)))
## This is better!
gf_bar(~ hour | dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot G: Counts of Tips by Hour and Day of Week",
subtitle = "Swapped the Facets"
) %>%
gf_theme(theme(axis.text.x = element_text(size = 4, hjust = 1)))
## This is better!
gf_bar(~ hour | dow, fill = ~tip, data = taxi_modified) %>%
gf_labs(
title = "Plot G: Counts of Tips by Hour and Day of Week",
subtitle = "Swapped the Facets"
) %>%
gf_theme(theme(axis.text.x = element_text(size = 4, hjust = 1))) %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
gf_bar(~ dow | hour, fill = ~tip, data = taxi_modified, position = "fill") %>%
gf_labs(
title = "Plot F: Counts of Tips by Hour and Day of Week",
subtitle = "Is this plot arrangement easy to grasp?"
) %>%  gf_refine(scale_fill_manual(values = c("orange", "powderblue"))) %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1))) %>%
gf_theme(theme(axis.text.y = element_text(size = 4, hjust = 1)))
gf_bar(~hour, fill = ~tip, data = taxi_modified, position = "fill") %>%
gf_labs(title = "Plot B: Counts of Tips by Hour") %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
##
gf_bar(~dow, fill = ~tip, data = taxi_modified,position="fill") %>%
gf_labs(title = "Plot C: Counts of Tips by Day of Week") %>%
gf_refine(scale_fill_manual(values = c("orange", "powderblue")))
skim(HELPrct)
HELPrct
install.packages("usethis")
library(usethis)
git_sitrep()
use_git()
git_sitrep()
use_git()
use_git()
use_github()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
credentials::git_credential_update()
git_sitrep()
proj_sitrep()
use_git()
use_git()
use_git()
use_github()
use_github()
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
use_github()
gitcreds::gitcreds_set()
library(usethis)
git_sitrep()
use_git()
use_github()
credentials::git_credential_ask()
credentials::git_credential_update()
credentials::git_credential_update()
use_github()
git_sitrep()
use_git()
git_sitrep()
proj_sitrep()
use_github()
credentials::git_credential_update()
credentials::git_credential_ask()
library(usethis)
git_sitrep()
