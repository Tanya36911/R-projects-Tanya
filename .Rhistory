gf_labs(
title = "Plot 3D: Prices Filled and Facetted by Cut",
subtitle = "Free y-scale",
caption = "ggformula"
) %>%
gf_theme(theme(
axis.text.x =
element_text(
angle = 45,
hjust = 1
)
))
eval: false
install.packages("shiny")
library(shiny)
runExample("01_hello")
run("diamonds")
runExample("01_hello")
race_df <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/race.csv")
rank_df <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv")
glimpse(race_df)
race_df %>%
favstats(~distance, data = .)
race_df %>%
favstats(~participants, data = .)
rank_df %>%
drop_na() %>%
favstats(time_in_seconds ~ gender, data = .)
crosstable(time_in_seconds + age ~ gender, data = rank_df) %>%
crosstable::as_flextable()
crosstable(time_in_seconds + age ~ gender, data = rank_df) %>%
crosstable::as_flextable()
race_df %>%
count(country) %>%
arrange(desc(n))
rank_df %>%
count(nationality) %>%
arrange(desc(n))
rank_df %>%
filter(rank %in% c(1, 2, 3)) %>%
count(nationality) %>%
arrange(desc(n))
longest_races <- race_df %>%
slice_max(n = 5, order_by = distance) # Longest distance races
longest_races
longest_races %>%
left_join(., rank_df, by = "race_year_id") %>% # total participants in longest 4 races
filter(rank %in% c(1:10)) %>% # Top 10 ranks
count(nationality) %>%
arrange(desc(n))
glimpse(rank_df)
rank_df %>%
gf_histogram(~time_in_seconds, bins = 75) %>%
gf_labs(title = "Histogram of Race Times")
rank_df %>%
gf_histogram(~time_in_seconds, bins = 75, fill="powderblue",alpha(100)) %>%
gf_labs(title = "Histogram of Race Times")
rank_df %>%
gf_histogram(~time_in_seconds, bins = 75, fill="powderblue",alpha(255)) %>%
gf_labs(title = "Histogram of Race Times")
rank_df %>%
gf_histogram(~time_in_seconds, bins = 75, fill="powderblue",alpha(1)) %>%
gf_labs(title = "Histogram of Race Times")
rank_df %>%
gf_histogram(~time_in_seconds, bins = 75, fill="powderblue",alpha=1) %>%
gf_labs(title = "Histogram of Race Times")
race_df %>%
gf_histogram(~distance, bins = 50) %>%
gf_labs(title = "Histogram of Race Distances")
race_df %>%
gf_histogram(~distance, bins = 50) %>%
gf_labs(title = "Histogram of Race Distances")
race_df %>%
filter(distance == 0)
race_times <- race_df %>%
count(start_time) %>%
arrange(desc(n))
race_times
race_start_factor <- race_df %>%
filter(distance == 0) %>% # Races that actually took place
mutate(
start_day_time =
case_when(
start_time > hms("02:00:00") &
start_time <= hms("06:00:00") ~ "early_morning",
start_time > hms("06:00:01") &
start_time <= hms("10:00:00") ~ "late_morning",
start_time > hms("10:00:01") &
start_time <= hms("14:00:00") ~ "mid_day",
start_time > hms("14:00:01") &
start_time <= hms("18:00:00") ~ "afternoon",
start_time > hms("18:00:01") &
start_time <= hms("22:00:00") ~ "evening",
start_time > hms("22:00:01") &
start_time <= hms("23:59:59") ~ "night",
start_time >= hms("00:00:00") &
start_time <= hms("02:00:00") ~ "postmidnight",
.default = "other"
)
) %>%
mutate(
start_day_time =
as_factor(start_day_time) %>%
fct_collapse(
.f = .,
night = c("night", "postmidnight")
)
)
##
# Join with rank_df
race_start_factor %>%
left_join(rank_df, by = "race_year_id") %>%
drop_na(time_in_seconds) %>%
gf_histogram(
~time_in_seconds,
bins = 75,
fill = ~start_day_time,
color = ~start_day_time,
alpha = 0.5
) %>%
gf_facet_wrap(vars(start_day_time), ncol = 2, scales = "free_y") %>%
gf_labs(title = "Race Times by Start-Time")
pop <- read_csv("data/populations.csv")
pop <- read_csv("data/populations.csv")
pop <- read_delim(file= "../../data/populations.csv", delim=",")
pop <- read_delim(file= "../../data/populations.numbers.csv", delim=",")
pop <- read_delim(file= "../../data/populations", delim=",")
pop <- read_delim(file= "../../data/populations.csv", delim=",")
pop <- read_delim(file= "../../data/populations.csv", delim=",")
pop <- read_delim(file= "../../data/populations.csv", delim=",")
pop
inspect(pop)
gf_histogram(~value, data = pop, title = "Long Tailed Histogram")
##
gf_density(~value, data = pop, title = "Long Tailed Density")
gf_histogram(~value, data = pop, title = "Long Tailed Histogram", bins=100)
##
gf_density(~value, data = pop, title = "Long Tailed Density")
gf_histogram(~ log10(value), data = pop, title = "Histogram with Log transformed x-variable")
##
gf_density(~ log10(value), data = pop, title = "Density with Log transformed x-variable")
#| label: setup
library(tidyverse)
library(skimr)
library(ggformula)
library(crosstable)
library(mosaic)
#| label: setup
library(tidyverse)
library(skimr)
library(ggformula)
library(crosstable)
library(mosaic)
WE<- read_delim(file="../../data/SLID.csv",delim=",")
WE
glimse(WE)
glimpse(WE)
inspect(WE)
WE.mody<- WE %>%
mutate(
sex=as_factor(sex),
langauge=as_factor(language)
)
WE.mody<- WE %>%
mutate(
sex=as_factor(sex),
langauge=as_factor(language)
)
glimpse(WE.mody)
WE.mody<- WE %>%
mutate(
sex=as_factor(sex),
langauge=as_factor(language)
)
glimpse(WE.mody)
WE.mody<- WE %>%
mutate(
sex=as_factor(sex),
langauge=as_factor(language),
)
glimpse(WE.mody)
gf_histogram(~wages,
data = WE.mody,
bins = 100
) %>%
gf_labs(
title = "Plot 1B: Wages",
caption = "ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill="orange"
) %>%
gf_labs(
title = "Plot 1B: Wages",
caption = "ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill="orange",
colour="black"
) %>%
gf_labs(
title = "Plot 1B: Wages",
caption = "ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill="orange",
colour="black"
) %>%
gf_labs(
title = "Plot 1A: Wages",
caption = "ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~ education
colour="black"
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~education
colour="black"
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~education,
colour="black"
) %>%
gf_labs(
title = "Plot 1A: Wages",
caption
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~education,
) %>%
gf_labs(
title = "Plot 1A: Wages",
caption
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~education,
) %>%
gf_labs(
title = "Plot 1A: Wages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
) %>%
gf_labs(
title = "Plot 1A: Wages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
colour="black"
) %>%
gf_labs(
title = "Plot 1A: Wages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
colour="black",
position="fill"
) %>%
gf_labs(
title = "Plot 1A: Wages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
colour="black",
position="fill"
) %>%
gf_labs(
title = "Plot 2B: Wages and Languages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~sex,
colour="black"
) %>%
gf_labs(
title = "Plot 3A: Wages and Sex",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
colour="black",
position="fill"
) %>%
gf_labs(
title = "Plot 2A: Wages and Languages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~sex,
colour="black"
) %>%
gf_labs(
title = "Plot 2A: Wages and Languages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~sex,
colour="black",
position="fill"
) %>%
gf_labs(
title = "Plot 2A: Wages and Languages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~sex,
colour="black"
) %>%
gf_labs(
title = "Plot 2A: Wages and Sex",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~sex,
colour="black",
position="fill"
) %>%
gf_labs(
title = "Plot 3B: Wages and Sex",
caption="ggformula"
)
WE.mody %>%
gf_histogram(~wages, fill = ~language, color = "black", alpha = 0.3) %>%
gf_facet_wrap(~language) %>%
gf_labs(
title = "Plot 2C: Wages Filled and Facetted by Cut",
caption = "ggformula"
) %>%
gf_theme(theme(
axis.text.x = element_text(
angle = 45,
hjust = 1
)
))
WE.mody %>%
gf_histogram(~wages, fill = ~language, color = "black", alpha = 0.3) %>%
gf_facet_wrap(~language) %>%
gf_labs(
title = "Plot 2C: Wages Filled and Facetted by Languages",
caption = "ggformula"
) %>%
gf_theme(theme(
axis.text.x = element_text(
angle = 45,
hjust = 1
)
))
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
colour="black",
position="fill"
) %>%
gf_labs(
title = "Plot 2B: Wages and Languages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
colour="black",
position="fill"
) %>%
gf_labs(
title = "Plot 2B: Wages and Languages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
colour="black"
) %>%
gf_labs(
title = "Plot 2A: Wages and Languages",
caption="ggformula"
)
#| label: setup
library(tidyverse)
library(skimr)
library(ggformula)
library(crosstable)
library(mosaic)
WE<- read_delim(file="../../data/SLID.csv",delim=",")
WE
glimpse(WE)
inspect(WE)
WE.mody<- WE %>%
mutate(
sex=as_factor(sex),
langauge=as_factor(language)
)
glimpse(WE.mody)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill="orange",
colour="black"
) %>%
gf_labs(
title = "Plot 1A: Wages",
caption = "ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
colour="black"
) %>%
gf_labs(
title = "Plot 2A: Wages and Languages",
caption="ggformula"
)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
colour="black"
) %>%
gf_labs(
title = "Plot 2A: Wages and Languages",
caption="ggformula"
)
#| label: setup
library(tidyverse)
library(skimr)
library(ggformula)
library(crosstable)
library(mosaic)
gf_histogram(~wages,
data = WE.mody,
bins = 100,
fill= ~language,
colour="black"
) %>%
gf_labs(
title = "Plot 2A: Wages and Languages",
caption="ggformula"
)
WE.mody %>%
group_by(language) %>%
summarize(avg_w=mean(wages),count(n))
WE.mody %>%
group_by(language) %>%
summarize(avg_w=mean(wages),count=n())
WE.mody %>%
group_by(language) %>%
summarize(avg_w=median(wages),count=n())
WE.mody %>%
group_by(language) %>%
summarize(avg_w=meam(wages),count=n())
WE.mody %>%
group_by(language) %>%
summarize(avg_w=mean(wages),count=n())
WE.mody %>%
group_by(language) %>%
summarize(avg_w=mean(wages),count=n())
WE.mody %>%
group_by(language) %>%
summarize(avg_w=mean(wages, na.rm=TRUE),count=n())
WE.mody<- WE %>%
mutate(
sex=as_factor(sex),
language=as_factor(language)
)
glimpse(WE.mody)
WE.mody %>%
group_by(sex) %>%
summarize(avg_w=mean(wages, na.rm=TRUE),count=n())
library(usethis)
git_sitrep()
use_git()
use_github()
